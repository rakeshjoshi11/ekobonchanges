c
n
e
n
c
e
n
c
e
n
c
exception
n
e
n
c
d
n
c
d
n
c
b
n
c
a
n
c
a.split(",")
a=@flight.join(",")
@flight.join(",")
@flight.join(",").to_a
@flight.join(",").to_A
@flight.join(",")
@flight
@flight\
n
c
@flight
n
c
@flight
n
params
c
exception
n
params
c
params
@flight
n
c
puts @flight.join(",")
@flight.join(",")
@flight.split(",")
n
c
n
c
@flight
n
c
@flight.join(",")
@flight.count
n
c
 @flight.join(",")
@flight = CSV.read("/home/cti/Documents/country.csv")
c
CSV.read("/home/cti/Documents/country.csv")
c
Activity.all
@activity = Activity.where("created_at > '#{60.days.ago}'").delete_all
@activity = Activity.where("created_at < '#{60.days.ago}'").delete_all
Activity.all
Activity.alla
@activity = Activity.where("created_at < '#{1.day.}'").delete_all
Activity.all
@activity = Activity.where("created_at < '#{60.days.ago}'").delete_all
@activity = Activity.all.delete_all("created_at < '#{60.days.ago}'")
@activity = Activity.all.each.delete_all("created_at < '#{60.days.ago}'")
@activity = Activity.all.each
c
 @activity = Activity.all.uniq
c
n
c
@activity = Activity.all
c
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id).uniq
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id).uni1
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id).not.uniq
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id)
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id).where.not.uniq
Activity.all.select(:project_name,:carbonoffset,:offsetamount,:transaction_id,:partner_id).uniq
Activity.all.select(:project_name).uniq
Activity.select(:project_name).uniq
Activity.select(:project_name).uni1
Activity.uniq
Activity.destroy_duplicates_by(:project_name, :carbonoffset ,:offsetamount, :transaction_id, :partner_id)
Activity.uniq(:project_name)
Activity.where(project_name).uniq
Activity.all.each.where.not(id: id)
Activity.all.where.not(id: id)
Activity.where.not(id: id)
n
c
a
n
c
a
n
c
a
n
c
activity.save
activity.save!
c
a.transaction_id
a.project_name
a
c
a
c
a
c
Action.last
Action,last
activity
n
c
activity.save!
a
n
c
a
n
c
a
n
c
a
c
a
c
a
n
Action.last
Action.all
c
Activity.last
c
activity.save!
a.carbonoffset
a
n
activity = Activity.first_or_initialize
Action.all.each
c
Action <<  @activity
 @activity
 @activity.
 @activity.update
 @activity.update.Action
 @activity 
@activity = Activity.all
c
@activity = Action.update(activity_params)
@activity = Activity.all
activity_params
c
n
@activity.save!
activity_params
n
c
@activity=   Action.update(activity_params)
activity_params
params
c
C
@activity.save!
N
@activity = Activity.new(activity_params)
N
c
Action.last
 @action =   Action.update(activity_params)
 @action =   Activity.all 
 @action =   Activity.all || Action.all
 @action =   Activity.all << Action.all
@action
 @action =   Activity.all && Action.all
Activity.all
Activity
@activity
params
c
params
c
@activity.save!
@activity = Activity.new(activity_params)
params
parms
@activity = Activity.new(activity_params)
c
@activity = Activity.new(activity_params)
n
c
 @activity = Activity.new(activity_params)
n
c
 @action = Activity.joins(:action)
c
render json: {user_info: {@action=> @action}}, status: :ok
 @action = Action.joins(:activity)
c
 @action = Action.joins(:activity)
c
@action = Action.joins(:activity).last
@action = Action.joins(:activity)
c
@action = Action.joins(:activity)
c
exception
n
c
@activity = Activity.create(@action.attributes)
@action = Action.all.each.count
@action = Action.all.each
c
cv
@action =  Action.all
@attributes = Action.all
c
@activity = Activity.create(@action.project_name)
@activity = Activity.create(@action)
c
@activity = Activity.create(@action)
n
c
 @activity = Activity.create(@action)
 @activity = Activity.create(@action.attributes)
 @activity = Activity.create(@action.attributes.slice)
 @activity = Activity.create(@action.attributes.slice(*Activity.accessible_attributes))
n
nn
n
c
@activity = Activity.create(@action.attributes)
attributes = Action.all
@activity = Activity.create(@action.attributes)
@activity = Activity.create(@action)
@activity = Activity.create(@action.slice)
